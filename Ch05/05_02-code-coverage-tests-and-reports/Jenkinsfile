pipeline {
    agent any

    options {
        buildDiscarder(logRotator(daysToKeepStr: '10', numToKeepStr: '10'))
            timeout(time: 12, unit: 'HOURS')
            timestamps()
    }

    triggers {
        cron '@midnight'
    }

    stages {
        stage('Requirements') {
            steps {
                dir("${env.WORKSPACE}/Ch05/05_02-code-coverage-tests-and-reports"){
                    sh 'python3 -m venv .env'
                    sh './.env/bin/pip3 install --upgrade --requirement requirements.txt'
                }
            }
        }
        stage('Lint') {
            steps {
                dir("${env.WORKSPACE}/Ch05/05_02-code-coverage-tests-and-reports"){
                    sh '.env/bin/flake8 --ignore=E501,E231 *.py'
                    sh '.env/bin/pylint --errors-only --disable=C0301 --disable=C0326 *.py'
                }
            }
        }
        stage('Test') {
            steps {
                dir("${env.WORKSPACE}/Ch05/05_02-code-coverage-tests-and-reports"){
                    sh('''
                        .env/bin/coverage run -m pytest -v test_*.py \
                            --self-contained-html \
                            --html=./reports/pytest_report.html \
                            --junitxml=./reports/pytest_report.xml
                    ''')
                }
            }
        }
        stage('Report') {
            steps {
                dir("${env.WORKSPACE}/Ch05/05_02-code-coverage-tests-and-reports"){
                    sh('''
                        .env/bin/coverage html
                        .env/bin/coverage xml
                    ''')
                }
            }
        }
    }

    post {
        always {
            junit allowEmptyResults: true, testResults: '**/pytest_report.xml'

            publishCoverage adapters: [jacocoAdapter('coverage.xml')],
                sourceFileResolver: sourceFiles('STORE_LAST_BUILD')

            archiveArtifacts allowEmptyArchive: true,
                artifacts: '**/pytest_report.*',
                fingerprint: true,
                followSymlinks: false
        }
    }
}
